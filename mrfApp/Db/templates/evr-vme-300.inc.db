# Front panel universal I/O GPIO signal direction.
# Front panel universal I/O GPIO input register.
# Front panel universal I/O GPIO output register.

# We do not use these registers directly. Instead, we use them for providing
# access to the fine delay of the universal I/O modules, if a module supporting
# the fine delay is installed.

record(bi, "@PV_PREFIX@UnivOut0:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 0/1 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_0_1_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(bi, "@PV_PREFIX@UnivOut1:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 0/1 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_0_1_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(ao, "@PV_PREFIX@UnivOut0:FineDelay") {
  field(DESC, "Univ. output 0 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(ao, "@PV_PREFIX@UnivOut1:FineDelay") {
  field(DESC, "Univ. output 1 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(calc, "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Calc") {
  field(CALC, "(A&1023)|((B&1023)<<16)")
  field(INPA, "@PV_PREFIX@UnivOut0:FineDelay.RVAL")
  field(INPB, "@PV_PREFIX@UnivOut1:FineDelay.RVAL")
  field(FLNK,  "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Raw")
}

record(longout, "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Raw") {
  field(DTYP, "MRF Fine Delay Shift Register")
  field(OUT,  "@$(DEVICE) @ADDR(0x090)@[0] @ADDR(0x0098)@[0]")
  field(OMSL, "closed_loop")
  field(DOL,  "@PV_PREFIX@Intrnl:UnivOut01:FineDelay:Calc NPP")
}

record(bi, "@PV_PREFIX@UnivOut2:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 2/3 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_2_3_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(bi, "@PV_PREFIX@UnivOut3:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 2/3 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_2_3_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(ao, "@PV_PREFIX@UnivOut2:FineDelay") {
  field(DESC, "Univ. output 2 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(ao, "@PV_PREFIX@UnivOut3:FineDelay") {
  field(DESC, "Univ. output 3 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(calc, "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Calc") {
  field(CALC, "(A&1023)|((B&1023)<<16)")
  field(INPA, "@PV_PREFIX@UnivOut2:FineDelay.RVAL")
  field(INPB, "@PV_PREFIX@UnivOut3:FineDelay.RVAL")
  field(FLNK,  "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Raw")
}

record(longout, "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Raw") {
  field(DTYP, "MRF Fine Delay Shift Register")
  field(OUT,  "@$(DEVICE) @ADDR(0x090)@[4] @ADDR(0x0098)@[4]")
  field(OMSL, "closed_loop")
  field(DOL,  "@PV_PREFIX@Intrnl:UnivOut23:FineDelay:Calc NPP")
}

record(bi, "@PV_PREFIX@UnivOut4:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 4/5 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_4_5_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(bi, "@PV_PREFIX@UnivOut5:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 4/5 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_4_5_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(ao, "@PV_PREFIX@UnivOut4:FineDelay") {
  field(DESC, "Univ. output 4 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(ao, "@PV_PREFIX@UnivOut5:FineDelay") {
  field(DESC, "Univ. output 5 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(calc, "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Calc") {
  field(CALC, "(A&1023)|((B&1023)<<16)")
  field(INPA, "@PV_PREFIX@UnivOut4:FineDelay.RVAL")
  field(INPB, "@PV_PREFIX@UnivOut5:FineDelay.RVAL")
  field(FLNK,  "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Raw")
}

record(longout, "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Raw") {
  field(DTYP, "MRF Fine Delay Shift Register")
  # TODO Fix register address
  field(OUT,  "@$(DEVICE) @ADDR(0x090)@[8] @ADDR(0x0098)@[8]")
  field(OMSL, "closed_loop")
  field(DOL,  "@PV_PREFIX@Intrnl:UnivOut45:FineDelay:Calc NPP")
}

record(bi, "@PV_PREFIX@UnivOut6:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 6/7 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_6_7_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(bi, "@PV_PREFIX@UnivOut7:FineDelayAvailable") {
  field(DESC, "Univ. outp. mod. 6/7 fine delay avail.?")
  field(PINI, "YES")
  field(VAL,  "$(UNIV_OUT_6_7_FD_AVAILABLE=$(UNIV_OUT_FD_AVAILABLE=0))")
  field(ZNAM, "Not available")
  field(ONAM, "Available")
}

record(ao, "@PV_PREFIX@UnivOut6:FineDelay") {
  field(DESC, "Univ. output 6 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(ao, "@PV_PREFIX@UnivOut7:FineDelay") {
  field(DESC, "Univ. output 7 fine delay")
  field(DTYP, "Raw Soft Channel")
  field(LINR, "SLOPE")
  field(EOFF, "0")
  field(ESLO, "10")
  field(EGU,  "ps")
  field(FLNK, "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Calc")
# TODO This makes the alarm severity propagate back but it also causes undesired
# processing of the record (in particular on startup). Therefore, we do not use
# it at the moment which means that an output error will not turn up on the
# record seen by the user.
#  field(SDIS, "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Raw.SEVR CP MSS")
#  field(DISV, "999")
}

record(calc, "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Calc") {
  field(CALC, "(A&1023)|((B&1023)<<16)")
  field(INPA, "@PV_PREFIX@UnivOut6:FineDelay.RVAL")
  field(INPB, "@PV_PREFIX@UnivOut7:FineDelay.RVAL")
  field(FLNK,  "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Raw")
}

record(longout, "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Raw") {
  field(DTYP, "MRF Fine Delay Shift Register")
  field(OUT,  "@$(DEVICE) @ADDR(0x090)@[12] @ADDR(0x0098)@[12]")
  field(OMSL, "closed_loop")
  field(DOL,  "@PV_PREFIX@Intrnl:UnivOut67:FineDelay:Calc NPP")
}

