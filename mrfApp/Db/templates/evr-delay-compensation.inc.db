# DCENA flag in the control register.
#
# Most of the control register is handled in evr-common.inc.db, but this flag is
# only available for firmware versions that support delay compensation, so we
# handle it here instead.

record(bo, "@PV_PREFIX@DelayComp:Enabled") {
  field(DESC, "Enable delay compensation?")
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @ADDR(0x0004)@[22] uint32")
  field(ZNAM, "Disabled")
  field(ONAM, "Enabled")
}

# Delay compensation target value register.

record(longout, "@PV_PREFIX@DelayComp:TargetDelay") {
  field(DESC, "Delay comp. target delay")
  field(DTYP, "MRF Memory")
  field(OUT,  "@$(DEVICE) @ADDR(0x00b0)@ uint32")
}

# Delay compensation transmission path delay value.

record(longin, "@PV_PREFIX@DelayComp:PathDelay") {
  field(DESC, "Delay comp. transmission path delay")
  field(DTYP, "MRF Memory")
  field(INP,  "@$(DEVICE) @ADDR(0x00b4)@ uint32")
  field(SCAN, "1 second")
}

# Delay compensation internal delay value register.
record(longin, "@PV_PREFIX@DelayComp:InternalDelay") {
  field(DESC, "Delay comp. EVR internal delay")
  field(DTYP, "MRF Memory")
  field(INP,  "@$(DEVICE) @ADDR(0x00b8)@ uint32")
  field(SCAN, "1 second")
}


# Delay compensation status register.

record(mbbiDirect, "@PV_PREFIX@Intrnl:DelayComp:Status") {
  field(DTYP, "MRF Memory")
  field(INP,  "@$(DEVICE) @ADDR(0x00bc)@[15:0] uint32")
  field(FLNK, "@PV_PREFIX@Intrnl:DelayComp:PDValid")
  field(SCAN, "1 second")
}

record(calc, "@PV_PREFIX@Intrnl:DelayComp:PDValid") {
  field(CALC, "(A?4:0)+(B?2:0)+(C?1:0)")
  field(INPA, "@PV_PREFIX@Intrnl:DelayComp:Status.BA MSS")
  field(INPB, "@PV_PREFIX@Intrnl:DelayComp:Status.B9 MSS")
  field(INPC, "@PV_PREFIX@Intrnl:DelayComp:Status.B8 MSS")
  field(FLNK, "@PV_PREFIX@DelayComp:PathDelay:Valid")
}

# The delay path valid is actually made up of three individual bits, but a bit
# being set implies that the lower bits are also set, so actually we only have
# to handle four different states.
record(mbbi, "@PV_PREFIX@DelayComp:PathDelay:Valid") {
  field(DESC, "Path delay valid?")
  field(DTYP, "Raw Soft Channel")
  field(INP,  "@PV_PREFIX@Intrnl:DelayComp:PDValid MSS")
  field(FLNK, "@PV_PREFIX@DelayComp:TargetDelay:TooLong")
  field(ZRVL, "0")
  field(ZRST, "Not valid")
  field(ONVL, "1")
  field(ONST, "Valid (coarse prec.)")
  field(TWVL, "2")
  field(TWST, "Valid (medium prec.)")
  field(THVL, "4")
  field(THST, "Valid (fine prec.)")
}

record(bi, "@PV_PREFIX@DelayComp:TargetDelay:TooLong") {
  field(DESC, "Delay shorter than target delay?")
  field(INP,  "@PV_PREFIX@Intrnl:Status.B3 MSS")
  field(FLNK, "@PV_PREFIX@DelayComp:TargetDelay:TooShort")
  field(ZNAM, "OK")
  field(ONAM, "Delay setting too long")
  field(OSV,  "MAJOR")
}

record(bi, "@PV_PREFIX@DelayComp:TargetDelay:TooShort") {
  field(DESC, "Delay longer than target delay?")
  field(INP,  "@PV_PREFIX@Intrnl:Status.B2 MSS")
  field(FLNK, "@PV_PREFIX@DelayComp:Locked")
  field(ZNAM, "OK")
  field(ONAM, "Delay setting too short")
  field(OSV,  "MAJOR")
}

record(bi, "@PV_PREFIX@DelayComp:Locked") {
  field(DESC, "Delay FIFO locked to setting?")
  field(INP,  "@PV_PREFIX@Intrnl:Status.B2 MSS")
  field(ZNAM, "Not locked")
  field(ONAM, "Locked")
  field(ZSV,  "MINOR")
}

